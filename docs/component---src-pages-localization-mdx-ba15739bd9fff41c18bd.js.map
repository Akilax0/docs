{"version":3,"sources":["webpack:///../src/pages/localization.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"yPAQaA,G,UAAe,S,4MAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,yDAAwC,6BAAGC,WAAW,KAAQ,CAC1D,KAAQ,+CAD4B,+CAGxC,iBAAQ,CACN,GAAM,gBADR,gBAGA,2FACA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,6FAKL,iDACA,uBAAK,gCAAMA,WAAW,OAAU,IAA3B,qCAEL,iBAAQ,CACN,GAAM,mBADR,mBAGA,uEACA,iBAAQ,CACN,GAAM,aADR,aAGA,sBACE,kBAAIA,WAAW,MAAK,6BAAGA,WAAW,MAAS,CACvC,KAAQ,yCADQ,qBAGpB,kBAAIA,WAAW,MAAK,6BAAGA,WAAW,MAAS,CACvC,KAAQ,0FADQ,mEAGpB,kBAAIA,WAAW,MAAK,6BAAGA,WAAW,MAAS,CACvC,KAAQ,uEADQ,uCAGpB,kBAAIA,WAAW,MAAK,6BAAGA,WAAW,MAAS,CACvC,KAAQ,8EADQ,sCAGpB,kBAAIA,WAAW,MAAK,6BAAGA,WAAW,MAAS,CACvC,KAAQ,mHADQ,iC,0MAQ1BJ,EAAWK,gBAAiB","file":"component---src-pages-localization-mdx-ba15739bd9fff41c18bd.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/docs/docs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <p>{`Please find the source code from `}<a parentName=\"p\" {...{\n        \"href\": \"https://github.com/Pera-Swarm/localization\"\n      }}>{`https://github.com/Pera-Swarm/localization`}</a></p>\n    <h2 {...{\n      \"id\": \"requirements\"\n    }}>{`Requirements`}</h2>\n    <p>{`Please install following pip packages if they aren't pre-installed`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`pip install numpy\npip install opencv-python\npip install aruco\npip install paho-mqtt\n`}</code></pre>\n    <p>{`or use following command`}</p>\n    <pre><code parentName=\"pre\" {...{}}>{`pip install -r requirement.txt\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"run-the-scripts\"\n    }}>{`Run the scripts`}</h3>\n    <p>{`You can try scripts on the ./scripts directory`}</p>\n    <h3 {...{\n      \"id\": \"read-more\"\n    }}>{`Read More`}</h3>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://pypi.org/project/ar-markers/\"\n        }}>{`ar-markers 0.5.0`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://www.learnopencv.com/augmented-reality-using-aruco-markers-in-opencv-c-python/\"\n        }}>{`Augmented Reality using ArUco Markers in OpenCV (C++ / Python)`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://docs.opencv.org/trunk/d5/dae/tutorial_aruco_detection.html\"\n        }}>{`OpenCV: Detection of ArUco Markers`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://docs.opencv.org/master/db/da9/tutorial_aruco_board_detection.html\"\n        }}>{`OpenCV: Detection of ArUco Boards`}</a></li>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"https://mecaruco2.readthedocs.io/en/latest/notebooks_rst/Aruco/sandbox/ludovic/aruco_calibration_rotation.html\"\n        }}>{`Calibrating the board`}</a></li>\n    </ul>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}